this module depends on base-pb.
implements pb RPC.
in spark ,hbase,hadoop,es,grpc,open-tsdb and son on
//JBoss Microcontainer, OSGi, Guice以及Spring

grpc:
server startup->
erverBuilder.forPort(port)
        .addService(new GreeterImpl())
        .build()
        .start() 
ServiceLoader.load-》io.grpc.netty.NettyServerProvider-》NettyServer->start NettyNetty->init channel by ServerTransport 
with http2.
client startup->
ManagedChannel channel;
private final GreeterGrpc.GreeterBlockingStub blockingStub;
private final GreeterGrpc.GreeterStub asyncStub;
channel = ManagedChannelBuilder.forAddress(host, port)
        // Channels are secure by default (via SSL/TLS). For the example we disable TLS to avoid
        // needing certificates.
        .usePlaintext(true)
        .build();
blockingStub = GreeterGrpc.newBlockingStub(channel);
asyncStub = GreeterGrpc.newStub(channel);
ServiceLoader.load(ManagedChannelProvider.class, classLoader)->io.grpc.ManagedChannelProvider(grpc-netty.jar/grpc-okhhtp.jar->meta-inf->services)
->io.grpc.netty.NettyChannelProvider/io.grpc.okhttp.OkHttpChannelProvider

start NettyServerImpl:
Http2Settings settings = new Http2Settings();
		settings.initialWindowSize(Integer.MAX_VALUE);//flowControlWindow);
send a small file:nghttp -d "/work/code/pic/1.jpg" -v http://localhost:8080
Http2Settings settings = new Http2Settings();
		settings.initialWindowSize(Integer.MAX_VALUE);//flowControlWindow);
send a large file:
(mac)>ls -l
-rwxrwxrwx@   1 ***  staff  1215004505  3  4 08:02 movie.mkv
nghttp -d "/Users/sunanan/Downloads/movie.mkv" -v http://localhost:8080
...
[  6.079] send DATA frame <length=16384, flags=0x00, stream_id=13>
[  6.079] send DATA frame <length=16384, flags=0x00, stream_id=13>
[  6.079] send DATA frame <length=16384, flags=0x00, stream_id=13>
[  6.079] send DATA frame <length=16384, flags=0x00, stream_id=13>
[  6.079] send DATA frame <length=16218, flags=0x01, stream_id=13>
          ; END_STREAM        


     
        