// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SensorData.proto

package org.base.collector;

public final class SensorData {
  private SensorData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.base.collector.devtype}
   */
  public enum devtype
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MACROWAVE = 0;</code>
     */
    MACROWAVE(0),
    /**
     * <code>GEO = 1;</code>
     */
    GEO(1),
    /**
     * <code>KEYBAY = 2;</code>
     */
    KEYBAY(2),
    /**
     * <code>OTHER = 64;</code>
     */
    OTHER(64),
    ;

    /**
     * <code>MACROWAVE = 0;</code>
     */
    public static final int MACROWAVE_VALUE = 0;
    /**
     * <code>GEO = 1;</code>
     */
    public static final int GEO_VALUE = 1;
    /**
     * <code>KEYBAY = 2;</code>
     */
    public static final int KEYBAY_VALUE = 2;
    /**
     * <code>OTHER = 64;</code>
     */
    public static final int OTHER_VALUE = 64;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static devtype valueOf(int value) {
      return forNumber(value);
    }

    public static devtype forNumber(int value) {
      switch (value) {
        case 0: return MACROWAVE;
        case 1: return GEO;
        case 2: return KEYBAY;
        case 64: return OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<devtype>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        devtype> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<devtype>() {
            public devtype findValueByNumber(int number) {
              return devtype.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.base.collector.SensorData.getDescriptor().getEnumTypes().get(0);
    }

    private static final devtype[] VALUES = values();

    public static devtype valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private devtype(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.base.collector.devtype)
  }

  public interface macrowaveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.base.collector.macrowave)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    boolean hasLane();
    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    int getLane();

    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    boolean hasDate();
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    java.lang.String getDate();
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    com.google.protobuf.ByteString
        getDateBytes();

    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    boolean hasFlows();
    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    int getFlows();

    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    boolean hasSpped();
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    int getSpped();

    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    boolean hasOccu();
    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    float getOccu();
  }
  /**
   * Protobuf type {@code org.base.collector.macrowave}
   */
  public  static final class macrowave extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.base.collector.macrowave)
      macrowaveOrBuilder {
    // Use macrowave.newBuilder() to construct.
    private macrowave(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private macrowave() {
      id_ = 0L;
      lane_ = 0;
      date_ = "";
      flows_ = 0;
      spped_ = 0;
      occu_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private macrowave(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lane_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              date_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              flows_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              spped_ = input.readUInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              occu_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.base.collector.SensorData.internal_static_org_base_collector_macrowave_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.base.collector.SensorData.internal_static_org_base_collector_macrowave_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.base.collector.SensorData.macrowave.class, org.base.collector.SensorData.macrowave.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int LANE_FIELD_NUMBER = 2;
    private int lane_;
    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    public boolean hasLane() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    public int getLane() {
      return lane_;
    }

    public static final int DATE_FIELD_NUMBER = 3;
    private volatile java.lang.Object date_;
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    public java.lang.String getDate() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          date_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOWS_FIELD_NUMBER = 4;
    private int flows_;
    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    public boolean hasFlows() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    public int getFlows() {
      return flows_;
    }

    public static final int SPPED_FIELD_NUMBER = 5;
    private int spped_;
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    public boolean hasSpped() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    public int getSpped() {
      return spped_;
    }

    public static final int OCCU_FIELD_NUMBER = 6;
    private float occu_;
    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    public boolean hasOccu() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    public float getOccu() {
      return occu_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, lane_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, date_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, flows_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, spped_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, occu_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lane_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, date_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, flows_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, spped_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, occu_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.base.collector.SensorData.macrowave)) {
        return super.equals(obj);
      }
      org.base.collector.SensorData.macrowave other = (org.base.collector.SensorData.macrowave) obj;

      boolean result = true;
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasLane() == other.hasLane());
      if (hasLane()) {
        result = result && (getLane()
            == other.getLane());
      }
      result = result && (hasDate() == other.hasDate());
      if (hasDate()) {
        result = result && getDate()
            .equals(other.getDate());
      }
      result = result && (hasFlows() == other.hasFlows());
      if (hasFlows()) {
        result = result && (getFlows()
            == other.getFlows());
      }
      result = result && (hasSpped() == other.hasSpped());
      if (hasSpped()) {
        result = result && (getSpped()
            == other.getSpped());
      }
      result = result && (hasOccu() == other.hasOccu());
      if (hasOccu()) {
        result = result && (
            java.lang.Float.floatToIntBits(getOccu())
            == java.lang.Float.floatToIntBits(
                other.getOccu()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getId());
      }
      if (hasLane()) {
        hash = (37 * hash) + LANE_FIELD_NUMBER;
        hash = (53 * hash) + getLane();
      }
      if (hasDate()) {
        hash = (37 * hash) + DATE_FIELD_NUMBER;
        hash = (53 * hash) + getDate().hashCode();
      }
      if (hasFlows()) {
        hash = (37 * hash) + FLOWS_FIELD_NUMBER;
        hash = (53 * hash) + getFlows();
      }
      if (hasSpped()) {
        hash = (37 * hash) + SPPED_FIELD_NUMBER;
        hash = (53 * hash) + getSpped();
      }
      if (hasOccu()) {
        hash = (37 * hash) + OCCU_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOccu());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.base.collector.SensorData.macrowave parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.base.collector.SensorData.macrowave parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.base.collector.SensorData.macrowave parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.base.collector.SensorData.macrowave parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.base.collector.SensorData.macrowave parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.macrowave parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.base.collector.SensorData.macrowave parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.macrowave parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.base.collector.SensorData.macrowave parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.macrowave parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.base.collector.SensorData.macrowave prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.base.collector.macrowave}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.base.collector.macrowave)
        org.base.collector.SensorData.macrowaveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.base.collector.SensorData.internal_static_org_base_collector_macrowave_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.base.collector.SensorData.internal_static_org_base_collector_macrowave_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.base.collector.SensorData.macrowave.class, org.base.collector.SensorData.macrowave.Builder.class);
      }

      // Construct using org.base.collector.SensorData.macrowave.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        lane_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        date_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        flows_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        spped_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        occu_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.base.collector.SensorData.internal_static_org_base_collector_macrowave_descriptor;
      }

      public org.base.collector.SensorData.macrowave getDefaultInstanceForType() {
        return org.base.collector.SensorData.macrowave.getDefaultInstance();
      }

      public org.base.collector.SensorData.macrowave build() {
        org.base.collector.SensorData.macrowave result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.base.collector.SensorData.macrowave buildPartial() {
        org.base.collector.SensorData.macrowave result = new org.base.collector.SensorData.macrowave(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lane_ = lane_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.flows_ = flows_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.spped_ = spped_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.occu_ = occu_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.base.collector.SensorData.macrowave) {
          return mergeFrom((org.base.collector.SensorData.macrowave)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.base.collector.SensorData.macrowave other) {
        if (other == org.base.collector.SensorData.macrowave.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLane()) {
          setLane(other.getLane());
        }
        if (other.hasDate()) {
          bitField0_ |= 0x00000004;
          date_ = other.date_;
          onChanged();
        }
        if (other.hasFlows()) {
          setFlows(other.getFlows());
        }
        if (other.hasSpped()) {
          setSpped(other.getSpped());
        }
        if (other.hasOccu()) {
          setOccu(other.getOccu());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.base.collector.SensorData.macrowave parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.base.collector.SensorData.macrowave) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private int lane_ ;
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public boolean hasLane() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public int getLane() {
        return lane_;
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public Builder setLane(int value) {
        bitField0_ |= 0x00000002;
        lane_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public Builder clearLane() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lane_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object date_ = "";
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public java.lang.String getDate() {
        java.lang.Object ref = date_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            date_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        java.lang.Object ref = date_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public Builder setDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        date_ = getDefaultInstance().getDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public Builder setDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        date_ = value;
        onChanged();
        return this;
      }

      private int flows_ ;
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public boolean hasFlows() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public int getFlows() {
        return flows_;
      }
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public Builder setFlows(int value) {
        bitField0_ |= 0x00000008;
        flows_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public Builder clearFlows() {
        bitField0_ = (bitField0_ & ~0x00000008);
        flows_ = 0;
        onChanged();
        return this;
      }

      private int spped_ ;
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public boolean hasSpped() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public int getSpped() {
        return spped_;
      }
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public Builder setSpped(int value) {
        bitField0_ |= 0x00000010;
        spped_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public Builder clearSpped() {
        bitField0_ = (bitField0_ & ~0x00000010);
        spped_ = 0;
        onChanged();
        return this;
      }

      private float occu_ ;
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public boolean hasOccu() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public float getOccu() {
        return occu_;
      }
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public Builder setOccu(float value) {
        bitField0_ |= 0x00000020;
        occu_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public Builder clearOccu() {
        bitField0_ = (bitField0_ & ~0x00000020);
        occu_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.base.collector.macrowave)
    }

    // @@protoc_insertion_point(class_scope:org.base.collector.macrowave)
    private static final org.base.collector.SensorData.macrowave DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.base.collector.SensorData.macrowave();
    }

    public static org.base.collector.SensorData.macrowave getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<macrowave>
        PARSER = new com.google.protobuf.AbstractParser<macrowave>() {
      public macrowave parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new macrowave(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<macrowave> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<macrowave> getParserForType() {
      return PARSER;
    }

    public org.base.collector.SensorData.macrowave getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface geoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.base.collector.geo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    long getId();

    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    boolean hasLane();
    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    int getLane();

    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    boolean hasDate();
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    java.lang.String getDate();
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    com.google.protobuf.ByteString
        getDateBytes();

    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    boolean hasFlows();
    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    int getFlows();

    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    boolean hasSpped();
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    int getSpped();

    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    boolean hasOccu();
    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    float getOccu();
  }
  /**
   * Protobuf type {@code org.base.collector.geo}
   */
  public  static final class geo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.base.collector.geo)
      geoOrBuilder {
    // Use geo.newBuilder() to construct.
    private geo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private geo() {
      id_ = 0L;
      lane_ = 0;
      date_ = "";
      flows_ = 0;
      spped_ = 0;
      occu_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private geo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lane_ = input.readUInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              date_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              flows_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              spped_ = input.readUInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              occu_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.base.collector.SensorData.internal_static_org_base_collector_geo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.base.collector.SensorData.internal_static_org_base_collector_geo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.base.collector.SensorData.geo.class, org.base.collector.SensorData.geo.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *点位编号
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     */
    public long getId() {
      return id_;
    }

    public static final int LANE_FIELD_NUMBER = 2;
    private int lane_;
    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    public boolean hasLane() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *车道号
     * </pre>
     *
     * <code>optional uint32 lane = 2;</code>
     */
    public int getLane() {
      return lane_;
    }

    public static final int DATE_FIELD_NUMBER = 3;
    private volatile java.lang.Object date_;
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    public java.lang.String getDate() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          date_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *日期
     * </pre>
     *
     * <code>optional string date = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDateBytes() {
      java.lang.Object ref = date_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        date_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLOWS_FIELD_NUMBER = 4;
    private int flows_;
    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    public boolean hasFlows() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *流量
     * </pre>
     *
     * <code>optional uint32 flows = 4;</code>
     */
    public int getFlows() {
      return flows_;
    }

    public static final int SPPED_FIELD_NUMBER = 5;
    private int spped_;
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    public boolean hasSpped() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     *速度
     * </pre>
     *
     * <code>optional uint32 spped = 5;</code>
     */
    public int getSpped() {
      return spped_;
    }

    public static final int OCCU_FIELD_NUMBER = 6;
    private float occu_;
    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    public boolean hasOccu() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     *占有率
     * </pre>
     *
     * <code>optional float occu = 6;</code>
     */
    public float getOccu() {
      return occu_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, lane_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, date_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, flows_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, spped_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, occu_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lane_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, date_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, flows_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, spped_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, occu_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.base.collector.SensorData.geo)) {
        return super.equals(obj);
      }
      org.base.collector.SensorData.geo other = (org.base.collector.SensorData.geo) obj;

      boolean result = true;
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasLane() == other.hasLane());
      if (hasLane()) {
        result = result && (getLane()
            == other.getLane());
      }
      result = result && (hasDate() == other.hasDate());
      if (hasDate()) {
        result = result && getDate()
            .equals(other.getDate());
      }
      result = result && (hasFlows() == other.hasFlows());
      if (hasFlows()) {
        result = result && (getFlows()
            == other.getFlows());
      }
      result = result && (hasSpped() == other.hasSpped());
      if (hasSpped()) {
        result = result && (getSpped()
            == other.getSpped());
      }
      result = result && (hasOccu() == other.hasOccu());
      if (hasOccu()) {
        result = result && (
            java.lang.Float.floatToIntBits(getOccu())
            == java.lang.Float.floatToIntBits(
                other.getOccu()));
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getId());
      }
      if (hasLane()) {
        hash = (37 * hash) + LANE_FIELD_NUMBER;
        hash = (53 * hash) + getLane();
      }
      if (hasDate()) {
        hash = (37 * hash) + DATE_FIELD_NUMBER;
        hash = (53 * hash) + getDate().hashCode();
      }
      if (hasFlows()) {
        hash = (37 * hash) + FLOWS_FIELD_NUMBER;
        hash = (53 * hash) + getFlows();
      }
      if (hasSpped()) {
        hash = (37 * hash) + SPPED_FIELD_NUMBER;
        hash = (53 * hash) + getSpped();
      }
      if (hasOccu()) {
        hash = (37 * hash) + OCCU_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getOccu());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.base.collector.SensorData.geo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.base.collector.SensorData.geo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.base.collector.SensorData.geo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.base.collector.SensorData.geo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.base.collector.SensorData.geo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.geo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.base.collector.SensorData.geo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.geo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.base.collector.SensorData.geo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.geo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.base.collector.SensorData.geo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.base.collector.geo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.base.collector.geo)
        org.base.collector.SensorData.geoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.base.collector.SensorData.internal_static_org_base_collector_geo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.base.collector.SensorData.internal_static_org_base_collector_geo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.base.collector.SensorData.geo.class, org.base.collector.SensorData.geo.Builder.class);
      }

      // Construct using org.base.collector.SensorData.geo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        lane_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        date_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        flows_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        spped_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        occu_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.base.collector.SensorData.internal_static_org_base_collector_geo_descriptor;
      }

      public org.base.collector.SensorData.geo getDefaultInstanceForType() {
        return org.base.collector.SensorData.geo.getDefaultInstance();
      }

      public org.base.collector.SensorData.geo build() {
        org.base.collector.SensorData.geo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.base.collector.SensorData.geo buildPartial() {
        org.base.collector.SensorData.geo result = new org.base.collector.SensorData.geo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lane_ = lane_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.flows_ = flows_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.spped_ = spped_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.occu_ = occu_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.base.collector.SensorData.geo) {
          return mergeFrom((org.base.collector.SensorData.geo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.base.collector.SensorData.geo other) {
        if (other == org.base.collector.SensorData.geo.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLane()) {
          setLane(other.getLane());
        }
        if (other.hasDate()) {
          bitField0_ |= 0x00000004;
          date_ = other.date_;
          onChanged();
        }
        if (other.hasFlows()) {
          setFlows(other.getFlows());
        }
        if (other.hasSpped()) {
          setSpped(other.getSpped());
        }
        if (other.hasOccu()) {
          setOccu(other.getOccu());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.base.collector.SensorData.geo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.base.collector.SensorData.geo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *点位编号
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private int lane_ ;
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public boolean hasLane() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public int getLane() {
        return lane_;
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public Builder setLane(int value) {
        bitField0_ |= 0x00000002;
        lane_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *车道号
       * </pre>
       *
       * <code>optional uint32 lane = 2;</code>
       */
      public Builder clearLane() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lane_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object date_ = "";
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public java.lang.String getDate() {
        java.lang.Object ref = date_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            date_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDateBytes() {
        java.lang.Object ref = date_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          date_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public Builder setDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        date_ = getDefaultInstance().getDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *日期
       * </pre>
       *
       * <code>optional string date = 3;</code>
       */
      public Builder setDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        date_ = value;
        onChanged();
        return this;
      }

      private int flows_ ;
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public boolean hasFlows() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public int getFlows() {
        return flows_;
      }
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public Builder setFlows(int value) {
        bitField0_ |= 0x00000008;
        flows_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *流量
       * </pre>
       *
       * <code>optional uint32 flows = 4;</code>
       */
      public Builder clearFlows() {
        bitField0_ = (bitField0_ & ~0x00000008);
        flows_ = 0;
        onChanged();
        return this;
      }

      private int spped_ ;
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public boolean hasSpped() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public int getSpped() {
        return spped_;
      }
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public Builder setSpped(int value) {
        bitField0_ |= 0x00000010;
        spped_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *速度
       * </pre>
       *
       * <code>optional uint32 spped = 5;</code>
       */
      public Builder clearSpped() {
        bitField0_ = (bitField0_ & ~0x00000010);
        spped_ = 0;
        onChanged();
        return this;
      }

      private float occu_ ;
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public boolean hasOccu() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public float getOccu() {
        return occu_;
      }
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public Builder setOccu(float value) {
        bitField0_ |= 0x00000020;
        occu_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *占有率
       * </pre>
       *
       * <code>optional float occu = 6;</code>
       */
      public Builder clearOccu() {
        bitField0_ = (bitField0_ & ~0x00000020);
        occu_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.base.collector.geo)
    }

    // @@protoc_insertion_point(class_scope:org.base.collector.geo)
    private static final org.base.collector.SensorData.geo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.base.collector.SensorData.geo();
    }

    public static org.base.collector.SensorData.geo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<geo>
        PARSER = new com.google.protobuf.AbstractParser<geo>() {
      public geo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new geo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<geo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<geo> getParserForType() {
      return PARSER;
    }

    public org.base.collector.SensorData.geo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface sensordataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.base.collector.sensordata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    java.util.List<org.base.collector.SensorData.macrowave> 
        getWaveinfosList();
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    org.base.collector.SensorData.macrowave getWaveinfos(int index);
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    int getWaveinfosCount();
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    java.util.List<? extends org.base.collector.SensorData.macrowaveOrBuilder> 
        getWaveinfosOrBuilderList();
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    org.base.collector.SensorData.macrowaveOrBuilder getWaveinfosOrBuilder(
        int index);

    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    java.util.List<org.base.collector.SensorData.geo> 
        getGeoinfosList();
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    org.base.collector.SensorData.geo getGeoinfos(int index);
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    int getGeoinfosCount();
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    java.util.List<? extends org.base.collector.SensorData.geoOrBuilder> 
        getGeoinfosOrBuilderList();
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    org.base.collector.SensorData.geoOrBuilder getGeoinfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.base.collector.sensordata}
   */
  public  static final class sensordata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.base.collector.sensordata)
      sensordataOrBuilder {
    // Use sensordata.newBuilder() to construct.
    private sensordata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private sensordata() {
      waveinfos_ = java.util.Collections.emptyList();
      geoinfos_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private sensordata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                waveinfos_ = new java.util.ArrayList<org.base.collector.SensorData.macrowave>();
                mutable_bitField0_ |= 0x00000001;
              }
              waveinfos_.add(
                  input.readMessage(org.base.collector.SensorData.macrowave.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                geoinfos_ = new java.util.ArrayList<org.base.collector.SensorData.geo>();
                mutable_bitField0_ |= 0x00000002;
              }
              geoinfos_.add(
                  input.readMessage(org.base.collector.SensorData.geo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          waveinfos_ = java.util.Collections.unmodifiableList(waveinfos_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          geoinfos_ = java.util.Collections.unmodifiableList(geoinfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.base.collector.SensorData.internal_static_org_base_collector_sensordata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.base.collector.SensorData.internal_static_org_base_collector_sensordata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.base.collector.SensorData.sensordata.class, org.base.collector.SensorData.sensordata.Builder.class);
    }

    public static final int WAVEINFOS_FIELD_NUMBER = 1;
    private java.util.List<org.base.collector.SensorData.macrowave> waveinfos_;
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    public java.util.List<org.base.collector.SensorData.macrowave> getWaveinfosList() {
      return waveinfos_;
    }
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    public java.util.List<? extends org.base.collector.SensorData.macrowaveOrBuilder> 
        getWaveinfosOrBuilderList() {
      return waveinfos_;
    }
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    public int getWaveinfosCount() {
      return waveinfos_.size();
    }
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    public org.base.collector.SensorData.macrowave getWaveinfos(int index) {
      return waveinfos_.get(index);
    }
    /**
     * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
     */
    public org.base.collector.SensorData.macrowaveOrBuilder getWaveinfosOrBuilder(
        int index) {
      return waveinfos_.get(index);
    }

    public static final int GEOINFOS_FIELD_NUMBER = 2;
    private java.util.List<org.base.collector.SensorData.geo> geoinfos_;
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    public java.util.List<org.base.collector.SensorData.geo> getGeoinfosList() {
      return geoinfos_;
    }
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    public java.util.List<? extends org.base.collector.SensorData.geoOrBuilder> 
        getGeoinfosOrBuilderList() {
      return geoinfos_;
    }
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    public int getGeoinfosCount() {
      return geoinfos_.size();
    }
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    public org.base.collector.SensorData.geo getGeoinfos(int index) {
      return geoinfos_.get(index);
    }
    /**
     * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
     */
    public org.base.collector.SensorData.geoOrBuilder getGeoinfosOrBuilder(
        int index) {
      return geoinfos_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < waveinfos_.size(); i++) {
        output.writeMessage(1, waveinfos_.get(i));
      }
      for (int i = 0; i < geoinfos_.size(); i++) {
        output.writeMessage(2, geoinfos_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < waveinfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, waveinfos_.get(i));
      }
      for (int i = 0; i < geoinfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, geoinfos_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.base.collector.SensorData.sensordata)) {
        return super.equals(obj);
      }
      org.base.collector.SensorData.sensordata other = (org.base.collector.SensorData.sensordata) obj;

      boolean result = true;
      result = result && getWaveinfosList()
          .equals(other.getWaveinfosList());
      result = result && getGeoinfosList()
          .equals(other.getGeoinfosList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getWaveinfosCount() > 0) {
        hash = (37 * hash) + WAVEINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getWaveinfosList().hashCode();
      }
      if (getGeoinfosCount() > 0) {
        hash = (37 * hash) + GEOINFOS_FIELD_NUMBER;
        hash = (53 * hash) + getGeoinfosList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.base.collector.SensorData.sensordata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.base.collector.SensorData.sensordata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.base.collector.SensorData.sensordata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.base.collector.SensorData.sensordata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.base.collector.SensorData.sensordata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.sensordata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.base.collector.SensorData.sensordata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.sensordata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.base.collector.SensorData.sensordata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.base.collector.SensorData.sensordata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.base.collector.SensorData.sensordata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.base.collector.sensordata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.base.collector.sensordata)
        org.base.collector.SensorData.sensordataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.base.collector.SensorData.internal_static_org_base_collector_sensordata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.base.collector.SensorData.internal_static_org_base_collector_sensordata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.base.collector.SensorData.sensordata.class, org.base.collector.SensorData.sensordata.Builder.class);
      }

      // Construct using org.base.collector.SensorData.sensordata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWaveinfosFieldBuilder();
          getGeoinfosFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (waveinfosBuilder_ == null) {
          waveinfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          waveinfosBuilder_.clear();
        }
        if (geoinfosBuilder_ == null) {
          geoinfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          geoinfosBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.base.collector.SensorData.internal_static_org_base_collector_sensordata_descriptor;
      }

      public org.base.collector.SensorData.sensordata getDefaultInstanceForType() {
        return org.base.collector.SensorData.sensordata.getDefaultInstance();
      }

      public org.base.collector.SensorData.sensordata build() {
        org.base.collector.SensorData.sensordata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.base.collector.SensorData.sensordata buildPartial() {
        org.base.collector.SensorData.sensordata result = new org.base.collector.SensorData.sensordata(this);
        int from_bitField0_ = bitField0_;
        if (waveinfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            waveinfos_ = java.util.Collections.unmodifiableList(waveinfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.waveinfos_ = waveinfos_;
        } else {
          result.waveinfos_ = waveinfosBuilder_.build();
        }
        if (geoinfosBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            geoinfos_ = java.util.Collections.unmodifiableList(geoinfos_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.geoinfos_ = geoinfos_;
        } else {
          result.geoinfos_ = geoinfosBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.base.collector.SensorData.sensordata) {
          return mergeFrom((org.base.collector.SensorData.sensordata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.base.collector.SensorData.sensordata other) {
        if (other == org.base.collector.SensorData.sensordata.getDefaultInstance()) return this;
        if (waveinfosBuilder_ == null) {
          if (!other.waveinfos_.isEmpty()) {
            if (waveinfos_.isEmpty()) {
              waveinfos_ = other.waveinfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWaveinfosIsMutable();
              waveinfos_.addAll(other.waveinfos_);
            }
            onChanged();
          }
        } else {
          if (!other.waveinfos_.isEmpty()) {
            if (waveinfosBuilder_.isEmpty()) {
              waveinfosBuilder_.dispose();
              waveinfosBuilder_ = null;
              waveinfos_ = other.waveinfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              waveinfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWaveinfosFieldBuilder() : null;
            } else {
              waveinfosBuilder_.addAllMessages(other.waveinfos_);
            }
          }
        }
        if (geoinfosBuilder_ == null) {
          if (!other.geoinfos_.isEmpty()) {
            if (geoinfos_.isEmpty()) {
              geoinfos_ = other.geoinfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureGeoinfosIsMutable();
              geoinfos_.addAll(other.geoinfos_);
            }
            onChanged();
          }
        } else {
          if (!other.geoinfos_.isEmpty()) {
            if (geoinfosBuilder_.isEmpty()) {
              geoinfosBuilder_.dispose();
              geoinfosBuilder_ = null;
              geoinfos_ = other.geoinfos_;
              bitField0_ = (bitField0_ & ~0x00000002);
              geoinfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGeoinfosFieldBuilder() : null;
            } else {
              geoinfosBuilder_.addAllMessages(other.geoinfos_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.base.collector.SensorData.sensordata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.base.collector.SensorData.sensordata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.base.collector.SensorData.macrowave> waveinfos_ =
        java.util.Collections.emptyList();
      private void ensureWaveinfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          waveinfos_ = new java.util.ArrayList<org.base.collector.SensorData.macrowave>(waveinfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.base.collector.SensorData.macrowave, org.base.collector.SensorData.macrowave.Builder, org.base.collector.SensorData.macrowaveOrBuilder> waveinfosBuilder_;

      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public java.util.List<org.base.collector.SensorData.macrowave> getWaveinfosList() {
        if (waveinfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(waveinfos_);
        } else {
          return waveinfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public int getWaveinfosCount() {
        if (waveinfosBuilder_ == null) {
          return waveinfos_.size();
        } else {
          return waveinfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public org.base.collector.SensorData.macrowave getWaveinfos(int index) {
        if (waveinfosBuilder_ == null) {
          return waveinfos_.get(index);
        } else {
          return waveinfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder setWaveinfos(
          int index, org.base.collector.SensorData.macrowave value) {
        if (waveinfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveinfosIsMutable();
          waveinfos_.set(index, value);
          onChanged();
        } else {
          waveinfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder setWaveinfos(
          int index, org.base.collector.SensorData.macrowave.Builder builderForValue) {
        if (waveinfosBuilder_ == null) {
          ensureWaveinfosIsMutable();
          waveinfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          waveinfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder addWaveinfos(org.base.collector.SensorData.macrowave value) {
        if (waveinfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveinfosIsMutable();
          waveinfos_.add(value);
          onChanged();
        } else {
          waveinfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder addWaveinfos(
          int index, org.base.collector.SensorData.macrowave value) {
        if (waveinfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWaveinfosIsMutable();
          waveinfos_.add(index, value);
          onChanged();
        } else {
          waveinfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder addWaveinfos(
          org.base.collector.SensorData.macrowave.Builder builderForValue) {
        if (waveinfosBuilder_ == null) {
          ensureWaveinfosIsMutable();
          waveinfos_.add(builderForValue.build());
          onChanged();
        } else {
          waveinfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder addWaveinfos(
          int index, org.base.collector.SensorData.macrowave.Builder builderForValue) {
        if (waveinfosBuilder_ == null) {
          ensureWaveinfosIsMutable();
          waveinfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          waveinfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder addAllWaveinfos(
          java.lang.Iterable<? extends org.base.collector.SensorData.macrowave> values) {
        if (waveinfosBuilder_ == null) {
          ensureWaveinfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, waveinfos_);
          onChanged();
        } else {
          waveinfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder clearWaveinfos() {
        if (waveinfosBuilder_ == null) {
          waveinfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          waveinfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public Builder removeWaveinfos(int index) {
        if (waveinfosBuilder_ == null) {
          ensureWaveinfosIsMutable();
          waveinfos_.remove(index);
          onChanged();
        } else {
          waveinfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public org.base.collector.SensorData.macrowave.Builder getWaveinfosBuilder(
          int index) {
        return getWaveinfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public org.base.collector.SensorData.macrowaveOrBuilder getWaveinfosOrBuilder(
          int index) {
        if (waveinfosBuilder_ == null) {
          return waveinfos_.get(index);  } else {
          return waveinfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public java.util.List<? extends org.base.collector.SensorData.macrowaveOrBuilder> 
           getWaveinfosOrBuilderList() {
        if (waveinfosBuilder_ != null) {
          return waveinfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(waveinfos_);
        }
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public org.base.collector.SensorData.macrowave.Builder addWaveinfosBuilder() {
        return getWaveinfosFieldBuilder().addBuilder(
            org.base.collector.SensorData.macrowave.getDefaultInstance());
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public org.base.collector.SensorData.macrowave.Builder addWaveinfosBuilder(
          int index) {
        return getWaveinfosFieldBuilder().addBuilder(
            index, org.base.collector.SensorData.macrowave.getDefaultInstance());
      }
      /**
       * <code>repeated .org.base.collector.macrowave waveinfos = 1;</code>
       */
      public java.util.List<org.base.collector.SensorData.macrowave.Builder> 
           getWaveinfosBuilderList() {
        return getWaveinfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.base.collector.SensorData.macrowave, org.base.collector.SensorData.macrowave.Builder, org.base.collector.SensorData.macrowaveOrBuilder> 
          getWaveinfosFieldBuilder() {
        if (waveinfosBuilder_ == null) {
          waveinfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.base.collector.SensorData.macrowave, org.base.collector.SensorData.macrowave.Builder, org.base.collector.SensorData.macrowaveOrBuilder>(
                  waveinfos_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          waveinfos_ = null;
        }
        return waveinfosBuilder_;
      }

      private java.util.List<org.base.collector.SensorData.geo> geoinfos_ =
        java.util.Collections.emptyList();
      private void ensureGeoinfosIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          geoinfos_ = new java.util.ArrayList<org.base.collector.SensorData.geo>(geoinfos_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.base.collector.SensorData.geo, org.base.collector.SensorData.geo.Builder, org.base.collector.SensorData.geoOrBuilder> geoinfosBuilder_;

      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public java.util.List<org.base.collector.SensorData.geo> getGeoinfosList() {
        if (geoinfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(geoinfos_);
        } else {
          return geoinfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public int getGeoinfosCount() {
        if (geoinfosBuilder_ == null) {
          return geoinfos_.size();
        } else {
          return geoinfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public org.base.collector.SensorData.geo getGeoinfos(int index) {
        if (geoinfosBuilder_ == null) {
          return geoinfos_.get(index);
        } else {
          return geoinfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder setGeoinfos(
          int index, org.base.collector.SensorData.geo value) {
        if (geoinfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoinfosIsMutable();
          geoinfos_.set(index, value);
          onChanged();
        } else {
          geoinfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder setGeoinfos(
          int index, org.base.collector.SensorData.geo.Builder builderForValue) {
        if (geoinfosBuilder_ == null) {
          ensureGeoinfosIsMutable();
          geoinfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          geoinfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder addGeoinfos(org.base.collector.SensorData.geo value) {
        if (geoinfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoinfosIsMutable();
          geoinfos_.add(value);
          onChanged();
        } else {
          geoinfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder addGeoinfos(
          int index, org.base.collector.SensorData.geo value) {
        if (geoinfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeoinfosIsMutable();
          geoinfos_.add(index, value);
          onChanged();
        } else {
          geoinfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder addGeoinfos(
          org.base.collector.SensorData.geo.Builder builderForValue) {
        if (geoinfosBuilder_ == null) {
          ensureGeoinfosIsMutable();
          geoinfos_.add(builderForValue.build());
          onChanged();
        } else {
          geoinfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder addGeoinfos(
          int index, org.base.collector.SensorData.geo.Builder builderForValue) {
        if (geoinfosBuilder_ == null) {
          ensureGeoinfosIsMutable();
          geoinfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          geoinfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder addAllGeoinfos(
          java.lang.Iterable<? extends org.base.collector.SensorData.geo> values) {
        if (geoinfosBuilder_ == null) {
          ensureGeoinfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, geoinfos_);
          onChanged();
        } else {
          geoinfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder clearGeoinfos() {
        if (geoinfosBuilder_ == null) {
          geoinfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          geoinfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public Builder removeGeoinfos(int index) {
        if (geoinfosBuilder_ == null) {
          ensureGeoinfosIsMutable();
          geoinfos_.remove(index);
          onChanged();
        } else {
          geoinfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public org.base.collector.SensorData.geo.Builder getGeoinfosBuilder(
          int index) {
        return getGeoinfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public org.base.collector.SensorData.geoOrBuilder getGeoinfosOrBuilder(
          int index) {
        if (geoinfosBuilder_ == null) {
          return geoinfos_.get(index);  } else {
          return geoinfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public java.util.List<? extends org.base.collector.SensorData.geoOrBuilder> 
           getGeoinfosOrBuilderList() {
        if (geoinfosBuilder_ != null) {
          return geoinfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(geoinfos_);
        }
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public org.base.collector.SensorData.geo.Builder addGeoinfosBuilder() {
        return getGeoinfosFieldBuilder().addBuilder(
            org.base.collector.SensorData.geo.getDefaultInstance());
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public org.base.collector.SensorData.geo.Builder addGeoinfosBuilder(
          int index) {
        return getGeoinfosFieldBuilder().addBuilder(
            index, org.base.collector.SensorData.geo.getDefaultInstance());
      }
      /**
       * <code>repeated .org.base.collector.geo geoinfos = 2;</code>
       */
      public java.util.List<org.base.collector.SensorData.geo.Builder> 
           getGeoinfosBuilderList() {
        return getGeoinfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.base.collector.SensorData.geo, org.base.collector.SensorData.geo.Builder, org.base.collector.SensorData.geoOrBuilder> 
          getGeoinfosFieldBuilder() {
        if (geoinfosBuilder_ == null) {
          geoinfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.base.collector.SensorData.geo, org.base.collector.SensorData.geo.Builder, org.base.collector.SensorData.geoOrBuilder>(
                  geoinfos_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          geoinfos_ = null;
        }
        return geoinfosBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.base.collector.sensordata)
    }

    // @@protoc_insertion_point(class_scope:org.base.collector.sensordata)
    private static final org.base.collector.SensorData.sensordata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.base.collector.SensorData.sensordata();
    }

    public static org.base.collector.SensorData.sensordata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<sensordata>
        PARSER = new com.google.protobuf.AbstractParser<sensordata>() {
      public sensordata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new sensordata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<sensordata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<sensordata> getParserForType() {
      return PARSER;
    }

    public org.base.collector.SensorData.sensordata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_base_collector_macrowave_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_base_collector_macrowave_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_base_collector_geo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_base_collector_geo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_base_collector_sensordata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_base_collector_sensordata_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020SensorData.proto\022\022org.base.collector\"_" +
      "\n\tmacrowave\022\n\n\002id\030\001 \001(\004\022\014\n\004lane\030\002 \001(\r\022\014\n" +
      "\004date\030\003 \001(\t\022\r\n\005flows\030\004 \001(\r\022\r\n\005spped\030\005 \001(" +
      "\r\022\014\n\004occu\030\006 \001(\002\"Y\n\003geo\022\n\n\002id\030\001 \001(\004\022\014\n\004la" +
      "ne\030\002 \001(\r\022\014\n\004date\030\003 \001(\t\022\r\n\005flows\030\004 \001(\r\022\r\n" +
      "\005spped\030\005 \001(\r\022\014\n\004occu\030\006 \001(\002\"i\n\nsensordata" +
      "\0220\n\twaveinfos\030\001 \003(\0132\035.org.base.collector" +
      ".macrowave\022)\n\010geoinfos\030\002 \003(\0132\027.org.base." +
      "collector.geo*8\n\007devtype\022\r\n\tMACROWAVE\020\000\022" +
      "\007\n\003GEO\020\001\022\n\n\006KEYBAY\020\002\022\t\n\005OTHER\020@"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_base_collector_macrowave_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_base_collector_macrowave_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_base_collector_macrowave_descriptor,
        new java.lang.String[] { "Id", "Lane", "Date", "Flows", "Spped", "Occu", });
    internal_static_org_base_collector_geo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_base_collector_geo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_base_collector_geo_descriptor,
        new java.lang.String[] { "Id", "Lane", "Date", "Flows", "Spped", "Occu", });
    internal_static_org_base_collector_sensordata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_base_collector_sensordata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_base_collector_sensordata_descriptor,
        new java.lang.String[] { "Waveinfos", "Geoinfos", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
